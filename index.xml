<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HomotopyContinuation.jl</title>
    <link>/</link>
    <description>Recent content on HomotopyContinuation.jl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Mar 2021 21:37:00 +0200</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing HomotopyContinuation.jl</title>
      <link>/guides/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/installation/</guid>
      <description>Requirements In order to use HomotopyContinuation.jl you need to have at least Julia 1.4 installed. If this is not the case you can download it at julialang.org. Please see the platform specific instructions if you have trouble installing Julia.
Installation HomotopyContinuation.jl is available through the Julia package manager. You can enter it by pressing ] in the REPL and then typing
pkg&amp;gt; add HomotopyContinuation Alternatively, you can also use
import Pkg Pkg.</description>
    </item>
    
    <item>
      <title>Problem formulation</title>
      <link>/guides/input/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/input/</guid>
      <description>In this guide we want to take a deep dive into the modeling language (ModelKit) provided by HomotopyContinuation.jl and also provide some tips along the way on how to best formulate your specific problem. This guide is complementary to the package function documentation where all available functions are described.
Variables We start with the basic building block of every problem: variables. You can construct a variable using the Variable constructor. Let&#39;s start by creating variables x and y.</description>
    </item>
    
    <item>
      <title>How to solve a system of polynomial equations</title>
      <link>/guides/solve-first-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/solve-first-system/</guid>
      <description>Requirements If you have not yet installed HomotopyContinuation.jl, please consider the installation guide.
Solve your first system of equations Consider the following simple system of two polynomials in two variables.
$$ f=\begin{bmatrix}x^2+2y \\ y^2-2 \end{bmatrix} $$
Solving the equation $f=0$ can be accomplished as follows
using HomotopyContinuation # load the package into the current Julia session @var x y; # declare the variables x and y f = System([x^2 + 2y, y^2 - 2]) # construct system f result = solve(f) # solve f After the computation has finished, you should see the following output.</description>
    </item>
    
    <item>
      <title>An introduction to the numerical solution of polynomial systems</title>
      <link>/guides/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/introduction/</guid>
      <description>A first example We are interested in the numerical solution of systems of polynomial equations like $$\begin{array}{rl} -x^5y &amp;amp;= (x^4 + y^4 - 1)(x^2 + y^2 - 2) \\ \frac12 &amp;amp;= x^2+2xy^2 - 2y^2 . \end{array}$$
Equivalently, we can see the solutions of this system of equations as the common zero set $V(f_1,f_2)$ of the polynomials $$ f_1(x,y) = (x^4 + y^4 - 1)(x^2 + y^2 - 2) + x^5y \quad \text{ and } \quad f_2(x,y) = x^2+2xy^2 - 2y^2 - \frac12 .</description>
    </item>
    
    <item>
      <title>The reach of a plane curve</title>
      <link>/examples/reach-curve/</link>
      <pubDate>Mon, 21 Oct 2019 10:00:00 +0200</pubDate>
      
      <guid>/examples/reach-curve/</guid>
      <description>The reach $\tau$ of an embedded manifold $M\subset \mathbb{R}^n$ is an important complexity measure for methods in computational topology, statistics and machine learning. Namely, estimating $M$, or functionals of $M$, requires regularity conditions and a common regularity assumption is that the reach $\tau &amp;gt;0$. The definition of $\tau$ is as follows:
$$\tau = \sup \{t\mid \text{all $x\in\mathbb{R}^n$ with $\mathrm{dist}(x,M)&amp;lt;t$ have a unique nearest point on $M$}\}$$
where the distance measure $\mathrm{dist}$ is the Euclidean distance.</description>
    </item>
    
    <item>
      <title>Polynomial systems arising from Nash equilibria</title>
      <link>/examples/nash/</link>
      <pubDate>Mon, 15 Mar 2021 21:37:00 +0200</pubDate>
      
      <guid>/examples/nash/</guid>
      <description>Author: Irem Portakal
Consider three people $A$, $B$ and $C$ playing a non-cooperative game and they have all 3 (mixed) strategies each. Each person has a payoff matrix depending on which strategies have been performed. For example for the person $A$, the entry $A_{ijk} \in \mathbb{Q}$ is the value of the payoff for person $A$ when $A$ performs the strategy $i$, $B$ the strategy $j$ and $C$ the strategy $k$. The indices $i$, $j$, and $k$ run over ${1,2,3}$, thus these define three $3\times 3 \times 3$ matrices (or tensors).</description>
    </item>
    
    <item>
      <title>Sampling and Homology via Bottlenecks</title>
      <link>/examples/sampling_bottlenecks/</link>
      <pubDate>Tue, 13 Oct 2020 21:56:55 +0100</pubDate>
      
      <guid>/examples/sampling_bottlenecks/</guid>
      <description>The paper Sampling and homology via bottlenecks by Di Rocco et. al. introduces a novel algorithm for producing a provably dense sample of a smooth and compact algebraic variety. Using the $\textit{bottlenecks}$ we obtain bounds on the density of the sample needed in order to guarantee that the homology of the variety can be recovered from the sample. This example implements the algorithm for the case when the variety is a smooth and compact complete intersection.</description>
    </item>
    
    <item>
      <title>Alt&#39;s problem</title>
      <link>/examples/alts-problem/</link>
      <pubDate>Mon, 28 Oct 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/alts-problem/</guid>
      <description>This post currently is only valid for HomotopyContinuation v1
This post was worked out in a student seminar that we held at TU Berlin in summer 2019. 
A four bar linkage, also called four bar, is a mechanism of four bars connected in a loop by four joints. One bar is fixed to the ground and on top of the opposing bar sits a triangle called coupler triangle whose apex is called coupler point.</description>
    </item>
    
    <item>
      <title>Computer vision</title>
      <link>/examples/computer-vision/</link>
      <pubDate>Tue, 03 Sep 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/computer-vision/</guid>
      <description>This post was worked out in a student seminar that we held at TU Berlin in summer 2019. 
We want to reconstruct a three-dimensional object from two-dimensional images. Think of an object, maybe a dinosaur, that is captured by $n$ cameras from different angles. Suppose we have the following information available:
 the configuration of the cameras (in the form of camera matrices); sets of 2D points in the $n$ two-dimensional images, where each set corresponds to one 3D point.</description>
    </item>
    
    <item>
      <title>Computing a logarithmic Voronoi cell</title>
      <link>/examples/logarithmic-voronoi/</link>
      <pubDate>Mon, 02 Sep 2019 16:50:00 +0200</pubDate>
      
      <guid>/examples/logarithmic-voronoi/</guid>
      <description>Authors: Alex Heaton, Yulia Alexandr, and Sascha Timme
Consider the following problem: Bob has three biased coins. He tosses the first one. If it&#39;s heads he chooses the biased coin in his left pocket, and if it&#39;s tails he chooses the biased coin in his right pocket. Bob then flips that coin 5 times. We consider those last 5 flips as the experiment. Therefore there are 6 possible outcomes: 0 heads, 1 head, 2 heads, 3 heads, 4 heads, or 5 heads.</description>
    </item>
    
    <item>
      <title>Sampling a probability distribution on a variety</title>
      <link>/examples/sampling/</link>
      <pubDate>Tue, 02 Jul 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/sampling/</guid>
      <description>The article Random points on an algebraic manifold proposes an algorithm for sampling from probability distributions on a variety based on linear slicing. In this example, we want to apply this algorithm to sample from the plane curve
$$V = \{ x=(x_1,x_2) \in \mathbb{R}^2 \mid x_1^4+x_2^4-3x_1^2-x_1x_2^2-x_2+1=0\}.$$
intersected with the box $B = [-2,2]\times [-2,2]$.
Suppose that $f:V\to \mathbb{R}_+$ is a measurable function. We want to sample from the density $f(x)/(\int_{V} f(x) \mathrm{d}V)$.</description>
    </item>
    
    <item>
      <title>Bacillus Subtilis</title>
      <link>/examples/bacillus-subtilis/</link>
      <pubDate>Sun, 16 Jun 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/bacillus-subtilis/</guid>
      <description>The environmental and energy stress response of the bacterium Bacillus subtilis are modelled in the article
Narula,Tiwari, and Igoshin: Role of Autoregulation and Relative Synthesis of Operon Partners in Alternative Sigma Factor Networks. PLoS Comput. Biology, 12(12), 2016.
The protein $\sigma_B$ is the focus of this paper. It is responsible for activating a general stress-response of the bacterium. $\sigma_B$ belongs to the family of $\sigma$ factors. These are a type of so called transcription factors; proteins which govern the expression of genes.</description>
    </item>
    
    <item>
      <title>Cyclooctane</title>
      <link>/examples/cyclooctane/</link>
      <pubDate>Sun, 16 Jun 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/cyclooctane/</guid>
      <description>Cyclooctane (CH₂)₈ is a molecule that consists of eight carbon atoms aligned in a ring, and eight hydrogen atoms, each of which is attached to one of the carbon atoms. The distance $c&amp;gt;0$ between neighboring carbon atoms is fixed.
In this example, we want to study the conformation space of cyclooctane with Homotopy Continuation. The equations for the positions $z_i\in\mathbb{R}^3$ of the carbon atoms satisfy the algebraic equations
$$\Vert z_1-z_2\Vert^2 = \cdots = \Vert z_7-z_8\Vert^2=\Vert z_8-z_1\Vert^2 = c^2.</description>
    </item>
    
    <item>
      <title>Method of moments</title>
      <link>/examples/method-of-moments/</link>
      <pubDate>Tue, 26 Mar 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/method-of-moments/</guid>
      <description>Consider three Gaussian random variables $X_1,X_2,X_3$ with means $\mu_1,\mu_2,\mu_3$ and variances $\sigma_1^2,\sigma_2^2,\sigma_3^2$. The density of $X_i$ is
$$\phi_i(x) = \frac{1}{\sqrt{2\pi}} e^{-\frac{(x-\mu_i)^2}{2\sigma_i^2}}.$$
A mixture of the three random variables is the random variable $U$ with density
$$\psi(x) = a_1 \phi_1(x) + a_2 \phi_2(x) + a_3 \phi_3(x), \quad\text{ for } \quad a_1+a_2+a_3 =1.$$
The method of moments recovers $\psi$ from the moments
$$m_k = \int x^k \psi(x) \mathrm{d}x.$$
Since we have 8 unknowns, we expect to need at least 8 moments to recover $\psi$.</description>
    </item>
    
    <item>
      <title>Minimizing a function over the sphere</title>
      <link>/examples/optimization/</link>
      <pubDate>Tue, 26 Mar 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/optimization/</guid>
      <description>We want to solve following optimization problem
$$ \text{minimize} 3x^3y+y^2z^2-2xy-4xz^3 \quad \text{s.t.} \quad x^2+y^2+z^2=1 $$
The strategy to find the global optimum is to use the method of Lagrange multipliers to find all critical points of the objective function such that the equality constraint is satisfied. We start with defining our Lagrangian.
using HomotopyContinuation, DynamicPolynomials @var x y z J = 3x^3*y+y^2*z^2-2x*y-x*4z^3 g = x^2+y^2+z^2-1 # Introduce auxillary variable for Lagrangian @var λ # define Lagrangian L = J - λ * g 3x³y - 4xz³ + y²z² - x²λ - y²λ - z²λ - 2xy + λ In order to compute all critical points we have to solve the square system of equations</description>
    </item>
    
    <item>
      <title>The 6R-serial link robot</title>
      <link>/examples/6rlinkrobot/</link>
      <pubDate>Tue, 26 Mar 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/6rlinkrobot/</guid>
      <description>The following example is from Section 7.3 in A. Sommese, C. Wampler: The Numerical Solution of Systems of Polynomial Arising in Engineering and Science
Consider a robot that consists of 7 links connected by 6 joints. The first link is fixed on the ground and the last link has a &amp;ldquo;hand&amp;rdquo;. The problem of determining the position of the hand when knowing the arrangement of the joints is called forward problem.</description>
    </item>
    
    <item>
      <title>The point on a variety that minimizes the distance to a given point</title>
      <link>/examples/critical-points/</link>
      <pubDate>Tue, 26 Mar 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/critical-points/</guid>
      <description>Consider the problem of computing the point on
$$ V = \{x=(x_1,x_2)^T\in \mathbb{R}^2 : f(x) = 0\}, \text{ for } f(x) = x_1^2 + x_2^2 - (x_1^2 + x_2^2 + x_2)^2, $$
which minimizes the distance to the point $u₀ = (-3,-2)$. The situation looks like this:
The minimizer $x^\star$ is a solution to the system
$$ F_u = \begin{bmatrix}\det(\begin{bmatrix}x-u &amp;amp; \nabla_x(f)\end{bmatrix})\\ f(x)\end{bmatrix} =0, $$
where $\nabla_x(f)$ is the gradient of $f$ at $x$.</description>
    </item>
    
    <item>
      <title>When do two ellipses meet?</title>
      <link>/examples/ellipses-tangent/</link>
      <pubDate>Tue, 26 Mar 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/ellipses-tangent/</guid>
      <description>Let two ellipses be centered at points $p_1,p_2$: $$ E_i( r ) = \{x\in \mathbb{R}^2 \mid (x-p_i)^T Q_i^TQ_i(x-p_i) = r^2\}, i=1,2, $$ where $Q_1, Q_2$ are symmetric matrices.
We wish to find the smallest radius $r$ for which $E_1( r )\cap E_2( r )$ is not empty. Let $r^\star$ be the solution for this optimization problem. In Julia we translate this into a polynomial system:
using HomotopyContinuation, LinearAlgebra # generate the variables @polyvar Q₁[1:2, 1:2] Q₂[1:2, 1:2] p₁[1:2] p₂[1:2] @polyvar x[1:2] r z₁ = x - p₁ z₂ = x - p₂ # initialize the equations for E₁ and E₂ f₁ = (Q₁ * z₁) ⋅ (Q₁ * z₁) - r^2 f₂ = (Q₂ * z₂) ⋅ (Q₂ * z₂) - r^2 # initialize the equation for E₁ and E₂ being tangent @polyvar λ g = (Q₁&amp;#39; * Q₁) * z₁ - λ .</description>
    </item>
    
    <item>
      <title>Systems with parameters</title>
      <link>/guides/parameter-homotopies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/parameter-homotopies/</guid>
      <description>Parameter Homotopies Consider the situation in which one has to solve a specific instance of a parametrized family of polynomial systems
$$ P = \{F(x,p) = (f_1(x,p), \ldots, f_n(x,p)) \mid p \in \mathbb{C}^m\}. $$
To not destroy the solution structure it is desirable to not leave $P$ during the homotopy. This can be accomplished by using the homotopy $$H(x,t) := F(x, (1-t)p + tq)$$ where $p$ and $q$ are parameters in $\mathbb{C}^m$.</description>
    </item>
    
    <item>
      <title>Energy minimization</title>
      <link>/examples/energy-minimization/</link>
      <pubDate>Fri, 17 Jan 2020 21:56:55 +0100</pubDate>
      
      <guid>/examples/energy-minimization/</guid>
      <description>Consider a physical system of $N$ particles $q=(q_1,\ldots,q_N)\in M$. In our example we take $M$ to be the space of configurations of cyclohexane. The $q_i$ are then the spacial positions of the six carbon atoms in a cyclohexane molecule. The constraints of this molecule are the following algebraic equations:
$$ M = \{(q_1,\ldots,q_6)\in (\mathbb{R}^3)^6 \mid \Vert q_1-q_2\Vert^2 = \cdots= \Vert q_5-q_6\Vert^2 = \Vert q_6-q_1\Vert^2 = c^2\}, $$
where $c$ is the bond length between two neighboring atoms (the vectors $b_i = q_i - q_{i-1}$ are called bonds).</description>
    </item>
    
    <item>
      <title>Monte Carlo integration</title>
      <link>/examples/monte-carlo-integration/</link>
      <pubDate>Tue, 02 Jul 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/monte-carlo-integration/</guid>
      <description>Consider the problem of numerically approximating an integral of the form
$$\int_{V} f(x) \mathrm{d}x,$$
where $V\subset \mathbb{R}^N$ is an open submanifold of an algebraic variety and $f:V\to \mathbb{R}$ is a measurable function.
For instance, for $f(x)=1$, this integral gives the volume of $V$. In this example, we want to use homotopy continuation to approximate this integral. We will use the Monte Carlo integration proposed in this article.
Integrating functions with homotopy continuation Let $n=\mathrm{dim} V$, and let $A\in \mathbb{R}^{n\times N}$ and $b\in \mathbb{R}^n$ be a matrix-vector pair with independent standard Gaussian entries.</description>
    </item>
    
    <item>
      <title>Monodromy</title>
      <link>/guides/monodromy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/monodromy/</guid>
      <description>The monodromy method An alternative to using the solve function is solving a polynomial system $F=(f_1,\ldots,f_n)$ by monodromy. This approach is more efficient, but requires the user to provide at least one solution of $F=0$. Here is the basic idea:
Suppose $x$ is a solution $F(x)=0$ and that $F=F_{u_0}$ is a point in a family of polynomial systems $\mathcal{F}=\{F_u : u\in \mathbb{C}^k\}$ which is defined with $k\geq 1$ parameters. The monodromy method consists in moving around $u$ in a loop starting and ending at $u_0$ while tracking $x$ along that loop.</description>
    </item>
    
    <item>
      <title>Tensor decomposition and homotopy continuation</title>
      <link>/examples/cpd/</link>
      <pubDate>Mon, 10 Dec 2018 21:56:55 +0100</pubDate>
      
      <guid>/examples/cpd/</guid>
      <description>In this blog I want to repeat the computations from the article &amp;ldquo;Homotopy Techniques for Tensor Decomposition and Perfect Identifiability&amp;rdquo; by Hauenstein, Oeding, Ottaviani and Sommese. In that article they compute the number of canonical polyadic decompositions (CPD) of a random $2\times 2\times 2\times 3$-tensor by using the monodromy method. It is known that with probability one a random complex $2\times 2\times 2\times 3$-tensor has rank equal to 4:
$$ T = \sum_{i=1}^4 a_i \otimes b_i \otimes c_i \otimes d_i,$$</description>
    </item>
    
    <item>
      <title>Polyhedral homotopy</title>
      <link>/guides/polyhedral/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/polyhedral/</guid>
      <description>Polyhedral start systems Polyhedral is a particular choice of start system for homotopy continuation.
The advantage of so called polyhedral homotopies over total degree homotopies is that the number of paths to track can be significantly smaller for the polyhedral homotopy.
Here is how it works:
julia&amp;gt; using HomotopyContinuation, PolynomialTestSystems julia&amp;gt; f = equations(cyclic(7)) julia&amp;gt; solve(f; start_system = :polyhedral) Result with 924 solutions ================================== • 924 non-singular solutions (56 real) • 0 singular solutions (0 real) • 924 paths tracked • random seed: 606778 For comparison:</description>
    </item>
    
    <item>
      <title>Symmetroids</title>
      <link>/examples/symmetroids/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/examples/symmetroids/</guid>
      <description>We make a numerical computation to determine the degree of the cubic symmetroid
$$Q_3:= \{\det(x_0A_0 + x_1A_1 + x_2A_2 + x_3A_3)\mid A_i\in \mathbb{C}^{3\times 3}, A_i^T = A_i, 0\leq i\leq 3\}.$$
First, we compute the dimension of $Q_3$. We use coordinates by setting the first matrix to be $A_0 = \mathrm{diag}(a_{1},a_{2},a_3)$, where $a_1,a_2,a_3$ are variables. Then, we have the following situation:
$$ f:V \to W,\; (a_1,a_2,a_3,A_1,A_2,A_3) \mapsto \text{coefficients of }\det\Big(\sum_{i=0}^4x_iA_i\Big), $$</description>
    </item>
    
    <item>
      <title>Using HomotopyContinuation.jl from Macaulay2</title>
      <link>/guides/macaulay2/</link>
      <pubDate>Mon, 15 Apr 2019 18:56:55 +0100</pubDate>
      
      <guid>/guides/macaulay2/</guid>
      <description>Macaulay2 is a great software for symbolic computations and it has many features which are not yet available in Julia. In this guide we show a possible workflow where the symbolic computations are happening in Macaulay2 and the numerical work in Julia.
Setting things up Our goal is to have a function writeSystem available which accepts as input an ideal I (or a list of polynomials) and a filename f and generates a file f containing the necessary Julia code to compute the solutions of I using HomotopyContinuation.</description>
    </item>
    
    <item>
      <title>Tritangents</title>
      <link>/examples/tritangents/</link>
      <pubDate>Mon, 26 Nov 2018 21:56:55 +0100</pubDate>
      
      <guid>/examples/tritangents/</guid>
      <description>A complex sextic curve in $\mathbb{C}^3$ is the intersection of a cubic surface $\mathcal{C}\subset \mathbb{C}^3$ with a quadric $\mathcal{Q}\subset \mathbb{C}^3$; that is, there exist polynomials in three variables $C$ of degree 3 and $Q$ of degree 2, such that $\mathcal{C} = \{x\in\mathbb{C}^3 : C(x) = 0\}$ and $\mathcal{Q} = \{x\in\mathbb{C}^3 : Q(x) = 0\}$.
An interesting fact about such sextic curves is that they have 120 complex tritangents (at least almost all of them).</description>
    </item>
    
    <item>
      <title>Solving many systems in a loop</title>
      <link>/guides/many-systems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/many-systems/</guid>
      <description>Polynomial systems arising in application very often have a coefficients which are determined by some parameters.
We now want to show you how you can setup an efficient way to solve this polynomial system for many parameter values. Assume we have the following polynomial system:
using HomotopyContinuation @var x y z p[1:3] F = System( [ x + 3 + 2y + 2y^2 - p[1], (x - 2 + 5y) * z + 4 - p[2] * z, (x + 2 + 4y) * z + 5 - p[3] * z, ]; parameters = p ) System of length 3 3 variables: x, y, z 3 parameters: p₁, p₂, p₃ 3 - p₁ + x + 2*y + 2*y^2 4 - z*p₂ + z*(-2 + x + 5*y) 5 - z*p₃ + z*(2 + x + 4*y) First, we compute the solutions for generic parameters and then use a parameter homotopy.</description>
    </item>
    
    <item>
      <title>Overdetermined systems</title>
      <link>/guides/overdetermined-tracking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/overdetermined-tracking/</guid>
      <description>Overdetermined systems A system of polynomial equations $f=(f_1(x_1,\ldots, x_m),\ldots, f_n(x_1,\ldots,x_m))$ is called overdetermined, if it has more equations than variables; i.e., when $n&amp;gt;m$. HomotopyContinuation.jl can solve overdetermined systems. Here is a simple example.
$$f(x,y,z) = \begin{bmatrix} xz-y^2 \\ y-z^2 \\ x-yz \\ x + y + z + 1\end{bmatrix}.$$
This system has 4 equation in 3 variables. One might expect that it has no solution, but actually it has solutions, as is explained here.</description>
    </item>
    
    <item>
      <title>Curvature of plane curves</title>
      <link>/examples/curvature/</link>
      <pubDate>Tue, 04 Sep 2018 11:56:55 +0100</pubDate>
      
      <guid>/examples/curvature/</guid>
      <description>Curvature of curves in the plane Consider the problem of computing the point on a (smooth) curve $V\subset \mathbb{R}^n$, where the curvature is maximal. We can use the following formula for curvature at a point $p\in V = \{f(x_1,x_2)=0\}$.
$$\sigma(p) = \frac{v^T H v}{g^\frac{3}{2}}$$
where $v^T \nabla_p f(p) = 0$, and $v^T v=1$, and $H$ is the Hessian of $f$ at $p$, and $g = \nabla_p f(p)^T\nabla_p f(p)$. The conditions for $\sigma(p)$ being maximal on $V$ are thus $v^T \nabla_p \sigma(p)=0$ and $f(p)=0$.</description>
    </item>
    
    <item>
      <title>3264 conics tangent to five conics</title>
      <link>/examples/3264/</link>
      <pubDate>Tue, 12 Feb 2019 21:56:55 +0100</pubDate>
      
      <guid>/examples/3264/</guid>
      <description>A conic in the plane $\mathbb{R}^2$ is the zero set of a quadratic polynomial in two variables:
$$ a_1 x^2 + a_2 xy + a_3 y^2 + a_4 x + a_5 y + a_6 .$$
Geometrically, a conic can be either a circle, an ellipse, a hyperbola, a parabola or a union of two lines. The last case is a degenerate conic. Double lines are allowed.
A classic problem in enumerative geometry is Steiner&#39;s conic problem which asks:</description>
    </item>
    
    <item>
      <title>The number of circles that are tangent to 3 given conics</title>
      <link>/examples/circles-conics/</link>
      <pubDate>Thu, 05 Jul 2018 21:56:55 +0100</pubDate>
      
      <guid>/examples/circles-conics/</guid>
      <description>Consider the problem of computing all circles that are tangent to 3 conics $C_1,C_2,C_3 \subset \mathbb{R}^2$. For instance, the following picture shows 14 circles that are tangent to
$$C_1 = \{y=-x^2+2x+5\},$$
$$C_2 = \{y = 2x^2+5x-8\},$$
$$C_3 = \{y = 8x^2-3x-2\}.$$
Emiris and Tzoumas write that there are 184 complex circles that are tangent to 3 general conics. This means, that there are 184 complex solutions $(a_1,a_2,r)$ such that there exists some $(x,y)\in\mathbb{C}^2$ with</description>
    </item>
    
    <item>
      <title>Choosing a start system</title>
      <link>/guides/start-systems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/start-systems/</guid>
      <description>Choosing a start system for homotopy continuation is an art for itself. We give some basic rules for start systems. They can roughly be subdivided into three classes:
I know nothing about the structure of my polynomial system In this case, there are two options: choosing a totaldegree start system, or a polyhedral start system (the default).
The first one is suitable for system, which are dense. The second one is suitable for systems, which are sparse.</description>
    </item>
    
    <item>
      <title>Composite systems</title>
      <link>/guides/composite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/composite/</guid>
      <description>If your system of polynomials is given as a composition of several systems, you can exploit this in HomotopyContinuation.jl.
Composition of two systems If $f$ and $g$ are your systems, and you want to solve $f \circ g$, then you can do this by
solve(f ∘ g) For instance, if
$$ f = \begin{bmatrix} ab - 2\\ ac- 1\end{bmatrix}, \quad g = \begin{bmatrix}x + y\\ y + 3\\ x + 2\end{bmatrix},$$</description>
    </item>
    
    <item>
      <title>Data analysis of solutions</title>
      <link>/guides/data-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/data-analysis/</guid>
      <description>We provide two special functions for analysing data: unique_points and multiplicities. They do the following: suppose that A is an array of real or complex vectors. Then, unique_points(A) filters multiple elements of A, such that each entry appears once (given a provided tolerance). On the other hand, multiplicities(A) returns the indices of multiple elements in A.
Unique points Here is an example:
julia&amp;gt; using HomotopyContinuation julia&amp;gt; A = [[1.0,0.5], [0.99,0.49], [2.</description>
    </item>
    
    <item>
      <title>Solutions in a product of projective spaces</title>
      <link>/guides/multiprojective/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/multiprojective/</guid>
      <description>When your system has a multi-projective structure, you can declare variables groups for accelerating the computations.
Here is a simple example for the following system defined over $\mathbb{CP}^1\times \mathbb{CP}^1$:
$$f(u,y,u,v) = \begin{bmatrix} xy - 6uv\\ x^2 - u^2 \end{bmatrix}.$$
The Julia code for the variable groups ${x,y}$ and ${u,v}$ is as follows.
using HomotopyContinuation @var x y u v f = System([x*y - 6u*v, x^2 - u^2], variable_groups=[[x,u], [y,v]]) System of length 2 4 variables (2 groups): [x, u], [y, v] -6*u*v + x*y -u^2 + x^2 S = solve(f, start_system = :total_degree) Result with 2 solutions ======================= • 2 paths tracked • 2 non-singular solutions (0 real) • random_seed: 0xdf2fbbdb • start_system: :total_degree </description>
    </item>
    
    <item>
      <title>Total Degree Homotopy</title>
      <link>/guides/totaldegree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/totaldegree/</guid>
      <description>Total degree is a particular choice of start system for homotopy continuation.
It is the simplest start system for a system
$$ F(x_1,\ldots,x_n)=\begin{bmatrix} f_1(x_1,\ldots,x_n) \\ \vdots\\ f_n(x_1,\ldots,x_n) \end{bmatrix}. $$
The total degree start system of $F$ is
$$ G(x_1,\ldots,x_n) = \begin{bmatrix} x_1^{d_1} - a_1 \\ \vdots \\ x_n^{d_n} - a_n\end{bmatrix}, \text{ where } d_i = \text{deg}(F_i), $$
and where the $a_i$ are random numbers. There are $d_1\cdots d_n$ many solutions to this system, which are easy to write down.</description>
    </item>
    
    <item>
      <title>3264 conics tangent to five conics</title>
      <link>/3264/</link>
      <pubDate>Tue, 12 Feb 2019 21:56:55 +0100</pubDate>
      
      <guid>/3264/</guid>
      <description>A conic in the plane $\mathbb{R}^2$ is the zero set of a quadratic polynomial in two variables:
$$ a_1 x^2 + a_2 xy + a_3 y^2 + a_4 x + a_5 y + a_6 .$$
Geometrically, a conic can be either a circle, an ellipse, a hyperbola, a parabola or a union of two lines. The last case is a degenerate conic. Double lines are allowed.
A classic problem in enumerative geometry is Steiner&#39;s conic problem which asks:</description>
    </item>
    
    <item>
      <title>Do It Yourself</title>
      <link>/diy/</link>
      <pubDate>Tue, 12 Feb 2019 21:56:55 +0100</pubDate>
      
      <guid>/diy/</guid>
      <description>A conic in the plane $\mathbb{R}^2$ is the zero set of a quadratic polynomial in two variables:
$$ a_1 x^2 + a_2 xy + a_3 y^2 + a_4 x + a_5 y + a_6 .$$ Geometrically, a conic can be either a circle, an ellipse, a hyperbola, a parabola or a union of two lines. The last case is called a degenerate conic.
Steiner&#39;s conic problem asks the question of how many conics are tangent to five given conics.</description>
    </item>
    
    <item>
      <title>Do It Yourself</title>
      <link>/do-it-yourself/</link>
      <pubDate>Tue, 12 Feb 2019 21:56:55 +0100</pubDate>
      
      <guid>/do-it-yourself/</guid>
      <description>A conic in the plane $\mathbb{R}^2$ is the zero set of a quadratic polynomial in two variables:
$$ a_1 x^2 + a_2 xy + a_3 y^2 + a_4 x + a_5 y + a_6 .$$ Geometrically, a conic can be either a circle, an ellipse, a hyperbola, a parabola or a union of two lines. The last case is called a degenerate conic.
Steiner&#39;s conic problem asks the question of how many conics are tangent to five given conics.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Paul Breiding I am a Postdoc in the group Algorithmic Algebra at TU Berlin.
  Sascha Timme I am a PhD student at TU Berlin working with Michael Joswig and Bernd Sturmfels.
     Paul Breiding I am a Postdoc in the group Algorithmic Algebra at TU Berlin.
   Sascha Timme I am a PhD student at TU Berlin working with Michael Joswig and Bernd Sturmfels.</description>
    </item>
    
    <item>
      <title>Changelog</title>
      <link>/changelog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/changelog/</guid>
      <description>Version 2.0 Version 2.0 of HomotopyContinuation.jl (HC.jl) is out!
This release comes with many exciting new features and a major revamp of the internals.
ModelKit Creating polynomials is now based primarily on our own modeling language ModelKit. Variables are created using the @var macro.
Polynomials defined with the old @polyvar command continue to be compatible with solve and monodromy_solve. It is possible (and easy) to convert expressions constructed with variables created by @polyvar to ModelKit.</description>
    </item>
    
  </channel>
</rss>