<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HomotopyContinuation.jl</title>
    <link>/</link>
    <description>Recent content on HomotopyContinuation.jl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Dec 2018 21:56:55 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Get started</title>
      <link>/guides/get-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/get-started/</guid>
      <description>This guide assumes that you have Julia 1.0 installed and running.
If this is not the case follow the instructions at julialang.org. Installation
HomotopyContinuation.jl is available through the Julia package manager by
pkg&amp;gt; add HomotopyContinuation  you can enter the Julia package manager by pressing ] in the REPL.
Basic usage HomotopyContinuation.jl aims at having easy-to-understand top-level commands. For instance, suppose we want to solve the following polynomial system
$$ f=\begin{bmatrix}x^2+2y \\ y^2-2 \end{bmatrix} $$</description>
    </item>
    
    <item>
      <title>Solving square systems of polynomial equations</title>
      <link>/guides/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/examples/</guid>
      <description>Solving square systems of polynomial equations The basic idea of homotopy continuation algorithms is explained quickly. Suppose that you have a square system of polynomials
$$ f(x)=(f_1(x_1,\ldots,x_n),\ldots,f_n(x_1,\ldots,x_n)). $$
Here, &amp;ldquo;square&amp;rdquo; means that the system should have as many equations as variables. The goal is to find solutions $x\in \mathbb{R}^n$ with $f(x)=0$. For this we need another system of equations, say $g(x)=(g_1(x_1,\ldots,x_n),\ldots,g_n(x_1,\ldots,x_n))$, and a solution $x_0$ with $g(x_0)=0$. The basic algorithm consists in connecting the polynomials $f$ and $g$ by a path and tracking the solution $x_0$ from $g$ to $f$ using Newton&amp;rsquo;s method (Remark: the space of polynomial systems form a vector space, in which the notion of path is well-defined).</description>
    </item>
    
    <item>
      <title>Tensor decomposition and homotopy continuation</title>
      <link>/blog/cpd/</link>
      <pubDate>Mon, 10 Dec 2018 21:56:55 +0100</pubDate>
      
      <guid>/blog/cpd/</guid>
      <description>In this blog I want to repeat the computations from the article &amp;ldquo;Homotopy Techniques for Tensor Decomposition and Perfect Identifiability&amp;rdquo; by Hauenstein, Oeding, Ottaviani and Sommese. In that article they compute the number of canonical polyadic decompositions (CPD) of a random $2\times 2\times 2\times 3$-tensor by using the monodromy method. It is known that with probability one a random complex $2\times 2\times 2\times 3$-tensor has rank equal to 4:
$$ T = \sum_{i=1}^4 a_i \otimes b_i \otimes c_i \otimes d_i,$$</description>
    </item>
    
    <item>
      <title>Tritangents</title>
      <link>/blog/tritangents/</link>
      <pubDate>Mon, 26 Nov 2018 21:56:55 +0100</pubDate>
      
      <guid>/blog/tritangents/</guid>
      <description>A complex sextic curve in $\mathbb{C}^3$ is the intersection of a cubic surface $\mathcal{C}\subset \mathbb{C}^3$ with a quadric $\mathcal{Q}\subset \mathbb{C}^3$; that is, there exist polynomials in three variables $C$ of degree 3 and $Q$ of degree 2, such that $\mathcal{C} = \{x\in\mathbb{C}^3 : C(x) = 0\}$ and $\mathcal{Q} = \{x\in\mathbb{C}^3 : Q(x) = 0\}$.
An interesting fact about such sextic curves is that they have 120 complex tritangents (at least almost all of them).</description>
    </item>
    
    <item>
      <title>The point of maximal curvature on a surface</title>
      <link>/blog/curvature/</link>
      <pubDate>Tue, 04 Sep 2018 11:56:55 +0100</pubDate>
      
      <guid>/blog/curvature/</guid>
      <description>In a recent discussion with Maddie Weinstein and Khazhgali Kozhasov we considered the problem of computing the maximal curvature of an algebraic manifold $V\subset \mathbb{R}^n$ (a smooth manifold that is also a real algebraic variety ).
Our definition of maximal curvature is $\sigma: = \mathrm{sup}_{p\in V} \sigma(p)$, where $\sigma(p)$ is the maximal curvature of a geodesic through $p$:
$$\sigma(p): = \mathrm{max} \,\{\Vert \ddot{\gamma}(0)\Vert \mid \gamma \in V \text{ geodesic w.\ } \gamma(0)=p, \Vert \dot{\gamma}(0)\Vert = 1\}$$</description>
    </item>
    
    <item>
      <title>Welcome!</title>
      <link>/blog/welcome/</link>
      <pubDate>Thu, 02 Mar 2017 21:56:55 +0100</pubDate>
      
      <guid>/blog/welcome/</guid>
      <description>Welcome to our new homepage! Hi there!
We are excited to launch the new homepage for HomotopyContinuation.jl. We plan to keep you here updated with the latest development news, interesting applications and general thoughts. If you use HomotopyContinuation.jl and want to share your experience get in touch with us!</description>
    </item>
    
    <item>
      <title>Macaulay2 interface for HomotopyContinuation.jl</title>
      <link>/blog/macaulay2/</link>
      <pubDate>Tue, 03 Jul 2018 18:56:55 +0100</pubDate>
      
      <guid>/blog/macaulay2/</guid>
      <description>Tim Duff pushed a very first version of a Macaulay2 interface to his Github repo. It is available in the &amp;ldquo;Julia&amp;rdquo; branch. The current version lets you export polynomials into .jl files or call HomotopyContinuation.jl directly from Macaulay2.
For instance, the following M2 code generates the file mypolynomial.jl (I assume that the functions from the Julia branch have been loaded into the current session).
R = QQ[x, y] f = {x^2 + y^2, x-y} writeSys(PolySystem f, &amp;quot;mypolynomial.</description>
    </item>
    
    <item>
      <title>The number of circles that are tangent to 3 given conics</title>
      <link>/blog/circles_conics/</link>
      <pubDate>Thu, 05 Jul 2018 21:56:55 +0100</pubDate>
      
      <guid>/blog/circles_conics/</guid>
      <description>Consider the problem of computing all circles that are tangent to 3 conics $C_1,C_2,C_3 \subset \mathbb{R}^2$. For instance, the following picture shows 14 circles that are tangent to $$C_1 = \{y=-x^2+2x+5\}, C_2 = \{y = 2x^2+5x-8\}, C_3 = \{y = 8x^2-3x-2\}.$$
Emiris and Tzoumas write that there are 184 complex circles that are tangent to 3 general conics. This means, that there are 184 complex solutions $(a_1,a_2,r)$ such that there exists some $(x,y)\in\mathbb{C}^2$ with</description>
    </item>
    
    <item>
      <title>Parameter Homotopies</title>
      <link>/guides/parameter-homotopies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/parameter-homotopies/</guid>
      <description>Parameter Homotopies Consider the situation in which one has to solve a specific instance of a parametrized family of polynomial systems
$$ P = \{f(x_1,\ldots,x_n,a) = (f_1(x_1,\ldots,x_n,a), \ldots, f_n(x_1\ldots,x_n,a)) \mid a \in \mathbb{R}^m\}. $$
Often, there is a number $N$, such that a generic member $f\in P$ has exactly $N$ solutions $x\in\mathbb{R}^n$ with $f(x)=0$. This $N$ might be very considerably smaller than the number of solutions of an arbitrary polynomial system not in $P$.</description>
    </item>
    
    <item>
      <title>Sascha @ International Congress on Mathematical Software</title>
      <link>/blog/icms/</link>
      <pubDate>Tue, 03 Jul 2018 19:56:55 +0100</pubDate>
      
      <guid>/blog/icms/</guid>
      <description>Sascha will present the features of HomotopyContinuation.jl at the International Congress on Mathematical Software at Notre Dame this year.</description>
    </item>
    
    <item>
      <title>Overdetermined systems</title>
      <link>/guides/overdetermined-tracking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/overdetermined-tracking/</guid>
      <description>Overdetermined systems A system of polynomial equations $f=(f_1(x_1,\ldots, x_m),\ldots, f_n(x_1,\ldots,x_m))$ is called overdetermined, if it has more equations than variables; i.e., when $n&amp;gt;m$. HomotopyContinuation.jl features Newtons method for overdetermined systems for tracking solutions. We show in an example how it can be used.
Example: the rational normal curve The rational normal curve is a 1-dimensional algebraic variety within the 3-dimensional complex space:
$$ C = \{(x,y,z) \in \mathbb{C}^3 \mid xz-y^2 = 0,\, y-z^2=0, \, x-yz = 0\}.</description>
    </item>
    
    <item>
      <title>Summer School on Numerical Computing in Algebraic Geometry at MPI Leipzig</title>
      <link>/blog/nag_summer_school/</link>
      <pubDate>Tue, 03 Jul 2018 20:56:55 +0100</pubDate>
      
      <guid>/blog/nag_summer_school/</guid>
      <description>To use the true power of homotopy continuation algorithms the user should be familiar with both algebraic geometry and numerical mathematics. If you want to learn more about the relations of those two, you should come to the Summer School on Numerical Computing in Algebraic Geometry at MPI Leipzig.</description>
    </item>
    
    <item>
      <title>Monodromy</title>
      <link>/guides/monodromy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/monodromy/</guid>
      <description>The monodromy method An alternative to using the solve function is solving a polynomial system $F=(f_1,\ldots,f_n)$ by monodromy. This approach is more efficient, but requires the user to provide at least one solution of $F=0$. Here is the basic idea:
Suppose $x$ is a solution $F(x)=0$ and that $F=F_{u_0}$ is a point in a family of polynomial systems $\mathcal{F}=\{F_u : u\in \mathbb{C}^k\}$ which is defined with $k\geq 1$ parameters. The monodromy method consists in moving around $u$ in a loop starting and ending at $u_0$ while tracking $x$ along that loop.</description>
    </item>
    
    <item>
      <title>Solutions in projective space</title>
      <link>/guides/projective/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/projective/</guid>
      <description>Solving systems defined in projective space In the guides so far we were computing solutions in $\mathbb{R}^n$ or $\mathbb{C}^n$. In some applications, however, it is required to compute solutions in projective space $\mathbb{RP}^n$ or $\mathbb{CP}^n$ . This space is defined as the space of all lines in $\mathbb{R}^{n+1}$, respectively $\mathbb{C}^{n+1}$, passing through the origin. HomotopyContinuation.jl automatically recognizes systems defined over projective space and adjusts the output. Next, we show an example.</description>
    </item>
    
    <item>
      <title>Custom Homotopies</title>
      <link>/guides/custom-homotopy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guides/custom-homotopy/</guid>
      <description>Introduction To track solutions from a start system $G$ to the target system $F$ we use by default the straight-line homotopy
$$ H(x,t) := (1-t)F+tG\;. $$
But this is in general not the best choice since you usually leave the solution space of your problem. Therefore we support the ability to define arbitrary homotopies where you have the full power of Julia available.
In the following we will illustrate how to setup a custom homotopy on the following example.</description>
    </item>
    
    <item>
      <title>3264 conics tangent to five conics</title>
      <link>/3264/</link>
      <pubDate>Mon, 21 Jan 2019 21:56:55 +0100</pubDate>
      
      <guid>/3264/</guid>
      <description>A conic in the plane $\mathbb{R}^2$ is the zero set of a quadratic polynomial in two variables:
$$ \,\, a_1 x^2 \,+\, a_2 xy \,+\, a_3 y^2 \, +\, a_4 x \, + \, a_5 y \, + \, a_6 \,.$$
Geometrically, a conic can be either a circle, an ellipse, a hyperbola, a parabola or a union of two lines. The last case is called a degenerate conic.
A classic problem in enumerative geometry is Steiner&amp;rsquo;s conic problem which asks: How many conics are tangent to five given conics?</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description> Paul Breiding I am a Postdoc in the group Nonlinear Algebra at the Max-Planck-Institute for Mathematics in the Sciences in Leipzig.
   Sascha Timme I am a PhD student at Technische Universität Berlin working on solving system of polynomial equations by numerical methods.
  </description>
    </item>
    
  </channel>
</rss>